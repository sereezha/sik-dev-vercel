---
import { getPrices } from 'src/services/subscriptions/utils';
import Button from '../Button.astro';
import { bottlesMap, getBenefitsList } from './config';
import { getSubscribeUrl } from 'src/utils/url';
import type { SubscriptionType } from 'src/services/subscriptions/types';
import {
  getSubscriptionTypeColor,
  getAnalyticsName,
} from 'src/services/subscriptions/config';
import { Image } from 'astro:assets';

export interface CardProps {
  type: SubscriptionType;
  title: string;
  description: string;
}

const { type, title, description } = Astro.props as CardProps;
const benefits = getBenefitsList(type);
const bottles = bottlesMap[type];
const initialPrice = getPrices(bottles, 1).sum;
const initialHref = getSubscribeUrl(bottles, 1);
const backgroundColor = getSubscriptionTypeColor(type);
---

<div
  class:list={['card', `card--${type}`]}
  data-js-subscribe-card
  data-bottles={bottles}
  data-months="1"
  data-type={type}
  data-intersect
>
  <div class="content">
    <h3 class="title heading">{title}</h3>
    <p class="description" set:html={description} />
    <ul role="list" class="benefits">
      {
        benefits.map((benefit) => (
          <li class="benefits-item">
            <span class="benefits-icon">
              <Image src={benefit.icon} alt="" />
            </span>
            <span class="benefits-title" set:html={benefit.title} />
          </li>
        ))
      }
    </ul>
  </div>
  <div class="footer">
    <form>
      <div class="radiogroup">
        <label class="radio-item" data-js-radio-item
          ><input
            value="1"
            name="months"
            type="radio"
            class="radio-input visually-hidden"
            checked=""
          /><span class="radio-inner js-month">місяць</span></label
        ><label class="radio-item" data-js-radio-item
          ><input
            value="3"
            name="months"
            type="radio"
            class="radio-input visually-hidden"
          /><span class="radio-inner"
            ><span class="radio-inner__text"
              >3 <span class="month-short">міс.</span><span class="month-long"
                >місяці</span
              ></span
            ></span
          ></label
        ><label class="radio-item" data-js-radio-item
          ><input
            value="6"
            name="months"
            type="radio"
            class="radio-input visually-hidden"
          /><span class="radio-inner"
            ><span class="radio-inner__text wh-nowrap">пів року</span></span
          ></label
        ><label class="radio-item" data-js-radio-item
          ><input
            value="12"
            name="months"
            type="radio"
            class="radio-input visually-hidden"
          /><span class="radio-inner"
            ><span class="radio-inner__text">рік</span></span
          ></label
        >
      </div>
    </form>
    <Button data-js-subscribe-button href={initialHref} fullWidth
      ><div class="button">
        Підписатись <span class="price"
          ><span data-js-subscribe-price>{initialPrice}</span> ₴</span
        >
      </div></Button
    >
  </div>
</div>

<style lang="scss" define:vars={{ 'card-background-color': backgroundColor }}>
  .radiogroup {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    border-radius: 8px;
    padding: 4px;
  }

  .card--one .radiogroup {
    background-color: hsl(233, 19%, 65%);
  }

  .card--two .radiogroup {
    background-color: #c98286;
  }

  .card--special .radiogroup {
    background-color: #9e9485;
  }

  input.radio-input:checked ~ .radio-inner,
  .radio-item.is-active .radio-inner {
    background-color: var(--main-white);
    color: #1a1a1f;
    box-shadow: 1px 2px 6px 0px #0000000f;
  }

  input.radio-input:focus-visible ~ .radio-inner {
    outline: var(--outline-width) solid var(--outline-color);
    outline-offset: 3px;
  }

  .month-long {
    display: none;
  }

  .radio-inner {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: var(--main-white);
    border-radius: 4px;
    padding: 8px 6px;
    cursor: pointer;
    text-align: center;
    font-weight: 600;
  }

  .radio-item {
    display: block;
  }

  .card {
    display: grid;
    gap: 24px;
    padding: 20px 16px 16px;
    color: #1a1a1f;
    background-color: var(--card-background-color);
  }

  .footer {
    display: grid;
    gap: 16px;
    margin-top: auto;
  }

  .title {
    font-size: 4rem;
    line-height: 1;
  }

  .description {
    font-size: 1.7rem;
    line-height: 1.41;
  }

  .content {
    display: grid;
    gap: 8px;
    padding-inline-end: 28px;
  }

  .button {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    gap: 5px;
  }

  .benefits {
    display: grid;
    gap: 10px;
  }

  .benefits-item {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .benefits-icon {
    display: block;
    flex-shrink: 0;
    width: 64px;
    height: 64px;
  }

  .benefits-title {
    font-size: 1.7rem;
    line-height: 1.41;
  }

  @media screen and (min-width: $bp-tablet-min) {
    .month-short {
      display: none;
    }

    .radio-inner {
      padding: 8px 12px;
    }

    .month-long {
      display: inline;
    }
  }

  @media screen and (min-width: 33.68rem) and (max-width: $bp-desktop-max) {
    .content {
      padding-inline-end: 0;
    }
  }
</style>

<script>
  import { getSubscribeUrl } from 'src/utils/url';
  import { getPrices } from '../../services/subscriptions/utils';
  import { getAnalyticsName } from 'src/services/subscriptions/config';
  import type { SubscriptionType } from 'src/services/subscriptions/types';

  const cards = document.querySelectorAll('[data-js-subscribe-card]')!;
  cards.forEach((card) => {
    const bottles = card.getAttribute('data-bottles')!;
    const type = card.getAttribute('data-type')! as SubscriptionType;
    const radioItems = card.querySelectorAll('[data-js-radio-item]');
    const price = card.querySelector('[data-js-subscribe-price]')!;
    const button = card.querySelector(
      '[data-js-subscribe-button]'
    )! as HTMLAnchorElement;

    const subscribeCardButton = card.querySelector(
      '[data-js-subscribe-button]'
    )!;

    subscribeCardButton.addEventListener('click', (e) => {
      const analyticsName = getAnalyticsName(type);
      window.gtag('event', analyticsName, {
        price: price.textContent,
        months: card.getAttribute('data-months'),
      });
    });

    radioItems.forEach((item) => {
      item.addEventListener('change', (e) => {
        const { value } = e.target as HTMLInputElement;
        button.href = getSubscribeUrl(bottles, Number(value));
        const priceValue = getPrices(bottles, Number(value)).sum;
        price.textContent = priceValue.toString();
        card.setAttribute('data-months', value);
      });
    });
  });
</script>
